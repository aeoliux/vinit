#!/bin/sh

#
#MIT License
#
#Copyright (c) 2022 Zapomnij
#
#Permission is hereby granted, free of charge, to any person obtaining a copy
#of this software and associated documentation files (the "Software"), to deal
#in the Software without restriction, including without limitation the rights
#to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
#copies of the Software, and to permit persons to whom the Software is
#furnished to do so, subject to the following conditions:
#
#The above copyright notice and this permission notice shall be included in all
#copies or substantial portions of the Software.
#
#THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
#AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
#OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
#SOFTWARE.
#

set -e

if [ -r /usr/etc/rc.conf.d/network.conf ]; then
	. /usr/etc/rc.conf.d/network.conf
elif [ -r /etc/rc.conf.d/network.conf ]; then
	. /etc/rc.conf.d/network.conf
else
	echo "network configuration file doesn't exists. Cannot continue" > /dev/stderr
	exit 1
fi

gettype() {
	for i in ${types}; do
		if [ "${i}" = "${1}-static" ]; then
			echo "static"
			return
		elif [ "${i}" = "${1}-dhcp" ]; then
			echo "dhcp"
			return
		fi
	done
}

getitem() {
	for i in ${1}; do
		item=${i#${2}-*}
		if [ ! "${item}" = ${2} ]; then
			echo "${item}"
			return
		fi
	done
}

item() {
	for i in ${1}; do
		if [ "${i}" = "${2}" ]; then
			return 0;
		fi
	done
	return 1
}

case "${1}" in
	start)
		if [ -n "${USE_DHCP}" ]; then
			if [ -x /sbin/dhcpcd ]; then
				dhcpcd
				exit 0
			else
				echo "> No dhcp clients found" > /dev/stderr
				exit 1
			fi
		fi
		for int in ${interfaces}; do
			if [ ! -d /sys/class/net/${int} ]; then
				echo "> Waiting 10 seconds for ${int} interface"
				for count in 1 2 3 4 5 6 7 8 9 10; do
					sleep 1
					if [ -d /sys/class/net/${int} ]; then
						break
					fi
				done
				if [ -d /sys/class/net/${int} ]; then
					echo "> ${int} network interface doesn't exists" > /dev/stderr
					exit 1
				fi
			fi
			if item ${wlan} ${int}; then
				cfgfile=$(getitem ${wlan_config} ${int})
				netdrv=$(getitem ${wlan_netdrv} ${int})
				if [ -z "${cfg_file}" ]; then
					echo "> Wireless LAN configuration is invalid" > /dev/stderr
					exit 1
				fi
				if [ -z "${netdrv}" ]; then
					echo "> WARNING: Wireless LAN driver hasn't been specified. Using 'wext'. Try setting 'wlan_netdrv' to 'nl80211' if wext fails" > /dev/stderr
					netdrv=wext
				fi

				vinit-daemonutil -n wpa_supplicant_${int} -S vinit-logger -- -L /var/log/services/wpa_supplicant_${int}.log \
					wpa_supplicant -- -i ${int} -D ${netdrv} -c ${cfgfile}
			fi

			type=$(gettype ${int})
			case "${type}" in
				static)
					ip=$(getitem ${ifconfig} ${int})
					route=$(getitem ${routes} ${int})
					netmask=$(getitem ${netmasks} ${int})
					if [ -z ${ip} -o -z ${route} -o -z ${netmask} ]; then
						echo "> Network configuration is invalid" > /dev/stderr
						exit 1
					fi
					
					echo "> Setting up static network configuration for ${int}"
					ifconfig ${int} up
					ifconfig ${int} ${ip} netmask ${netmask}
					route add default gw ${route} ${int}

					if [ -n "${dns_servers}" ]; then
						[ -f /etc/resolv.conf ] && rm /etc/resolv.conf
						for dns in ${dns_servers}; do
							echo "nameserver ${dns}" >> /etc/resolv.conf
						done
					fi
					;;
				dhcp)
					if [ -x /sbin/dhcpcd ]; then
						echo "> Setting up interface ${int} using dhcpcd"
						dhcpcd ${int}
					else
						echo "> No dhcp clients found" > /dev/stderr
						exit 1
					fi
					;;
			esac
		done
		;;
	stop)
		if [ -n "${USE_DHCP}" ]; then
			if [ -x /sbin/dhcpcd ]; then
				dhcpcd -x
				exit 0
			else
				echo "> No dhcp clients found" > /dev/stderr
				exit 1
			fi
		fi
		for int in ${interfaces}; do
			type=$(gettype ${int})
			case "${type}" in
				static)
					echo "> Disabling network on ${int} interface"
					route=$(getitem ${routes} ${int})
					ip=$(getitem ${ifconfig} ${int})

					ifconfig ${int} delete ${ip}
					route del default gw ${route} ${int}
					ifconfig ${int} down

					[ -f /etc/resolv.conf ] && rm /etc/resolv.conf
					;;
				dhcp)
					if [ -x /sbin/dhcpcd ]; then
						echo "> Setting up interface ${int} using dhcpcd"
						dhcpcd -x ${int}
					else
						echo "> No dhcp clients found" > /dev/stderr
						exit 1
					fi
					;;
			esac
			if item ${wlan} ${int}; then
				if [ -f "/run/wpa_supplicant_${int}.pid" ]; then
					vinit-daemonutil -X wpa_supplicant_${int}
				fi
			fi
		done
		;;
	restart)
		${0} stop
		${0} start
		;;
esac